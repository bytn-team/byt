policy_module(bytn, 1.100.1)

########################################
#
# Declarations
#

type bytn_t;
type bytn_exec_t;
init_daemon_domain(bytn_t, bytn_exec_t)

permissive bytn_t;

type bytn_initrc_exec_t;
init_script_file(bytn_initrc_exec_t)

type bytn_conf_t;
files_type(bytn_conf_t)

type bytn_var_lib_t;
files_type(bytn_var_lib_t)

type bytn_var_run_t;
files_type(bytn_var_run_t)

type bytn_port_t;
corenet_port(bytn_port_t)

########################################
#
# bytn local policy
#
allow bytn_t self:process { fork };

allow bytn_t self:fifo_file rw_fifo_file_perms;
allow bytn_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(bytn_t, bytn_conf_t, bytn_conf_t)
manage_files_pattern(bytn_t, bytn_conf_t, bytn_conf_t)

manage_dirs_pattern(bytn_t, bytn_var_lib_t, bytn_var_lib_t)
manage_files_pattern(bytn_t, bytn_var_lib_t, bytn_var_lib_t)
files_var_lib_filetrans(bytn_t, bytn_var_lib_t, { dir file })

manage_dirs_pattern(bytn_t, bytn_var_run_t, bytn_var_run_t)
manage_files_pattern(bytn_t, bytn_var_run_t, bytn_var_run_t)

sysnet_dns_name_resolve(bytn_t)
corenet_all_recvfrom_unlabeled(bytn_t)

allow bytn_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(bytn_t)
corenet_tcp_sendrecv_generic_node(bytn_t)
corenet_tcp_sendrecv_all_ports(bytn_t)
corenet_tcp_bind_generic_node(bytn_t)

gen_require(`
    type bytn_port_t;
')
allow bytn_t bytn_port_t:tcp_socket name_bind;

gen_require(`
    type bytn_port_t;
')
allow bytn_t bytn_port_t:tcp_socket name_connect;

domain_use_interactive_fds(bytn_t)

files_read_etc_files(bytn_t)

miscfiles_read_localization(bytn_t)

sysnet_dns_name_resolve(bytn_t)

allow bytn_t bytn_exec_t:file execute_no_trans;
allow bytn_t self:process setsched;
corecmd_exec_ls(bytn_t)
corenet_tcp_connect_http_port(bytn_t)
dev_read_urand(bytn_t)
fs_getattr_xattr_fs(bytn_t)
kernel_read_system_state(bytn_t)
